<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(ProjectDir)..\Materialize.SequenceMethods\bin\$(Configuration)\Materialize.SequenceMethods.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Security" #>
<#@ import namespace="Materialize.SequenceMethods" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Reflection;
using Materialize.Reify2.Transitions;

namespace Materialize.Reify2.Parsing2.SeqMethods 
{
	static partial class QyParser 
	{
		delegate Transition Handler(MethodCallExpression ex);
		
		static IDictionary<MethodInfo, Handler> _dHandlers 
			= new Dictionary<MethodInfo, Handler>() {
<#foreach(var m in SeqMethodMap.Methods.Values) {#>
				{ QyMethods.<#=m.Name#>, ex => new <#=m.Name#>Transition(ex) },
<#}#>
			};

	} 

}