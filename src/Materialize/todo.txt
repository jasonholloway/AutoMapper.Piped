
TO DO! ********************************************


> Refactoring of parsing...
	MethodParsers to be accessed by dictionary (cos we *always* key off methoddef...)
	Each strategizer to be created as class: ie we key to factories
	This will allow a hierarchy of shared functionality in the strategizers







> Split to new solution: AutoMapper.Piped
	Problem of git history...
	

	


> before-and-after hooks should only apply after all filtering done.



> Fancy demo project: OData! Info about each request...
	
> EF-mapped entities can't be projected to... need to do this client-side.
	- so, server-side projection that would normally be attempted should be checked with regime - if unacceptable, stick on client (this seems slow...)
	
> Ensure no static dictionaries about: ioc container should deal with this
  

> Test cache behaviour...

> Unary strategies must be sensitive to whether the set has been re-limited on the client:
	different strategies needed in this case 

> Test projection expressions for inputs. Use IProjectionInputDetector interface.

> How to hook in provider-specific extensions from other projects - needed to limit dependencies. 
	Surely has to be some configuration option, and type-gathering at initialization.

> Compiled little functions to cached by their expression trees

> Predicates to be split as much as possible to get as much on server as we can

